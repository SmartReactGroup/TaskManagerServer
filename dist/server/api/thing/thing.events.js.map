{"version":3,"sources":["api/thing/thing.events.js"],"names":["ThingEvents","EventEmitter","setMaxListeners","events","save","remove","registerEvents","Thing","e","event","post","emitEvent","doc","emit","_id"],"mappings":"AAAA;;;;AAIA;;;;;;;AAEA;;AACA,IAAMA,cAAc,IAAIC,oBAAJ,EAApB;;AAEA;AACAD,YAAYE,eAAZ,CAA4B,CAA5B;;AAEA;AACA,IAAMC,SAAS;AACbC,QAAM,MADO;AAEbC,UAAQ;;AAGV;AALe,CAAf,CAMA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,OAAK,IAAIC,CAAT,IAAcL,MAAd,EAAsB;AACpB,QAAIM,QAAQN,OAAOK,CAAP,CAAZ;AACAD,UAAMG,IAAN,CAAWF,CAAX,EAAcG,UAAUF,KAAV,CAAd;AACD;AACF;;AAED,SAASE,SAAT,CAAmBF,KAAnB,EAA0B;AACxB,SAAO,UAASG,GAAT,EAAc;AACnBZ,gBAAYa,IAAZ,CAAoBJ,KAApB,SAA6BG,IAAIE,GAAjC,EAAwCF,GAAxC;AACAZ,gBAAYa,IAAZ,CAAiBJ,KAAjB,EAAwBG,GAAxB;AACD,GAHD;AAID;;QAEQN,c,GAAAA,c;kBACMN,W","file":"thing.events.js","sourcesContent":["/**\n * Thing model events\n */\n\n'use strict'\n\nimport { EventEmitter } from 'events'\nconst ThingEvents = new EventEmitter()\n\n// Set max event listeners (0 == unlimited)\nThingEvents.setMaxListeners(0)\n\n// Model events\nconst events = {\n  save: 'save',\n  remove: 'remove'\n}\n\n// Register the event emitter to the model events\nfunction registerEvents(Thing) {\n  for (var e in events) {\n    let event = events[e]\n    Thing.post(e, emitEvent(event))\n  }\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    ThingEvents.emit(`${event}:${doc._id}`, doc)\n    ThingEvents.emit(event, doc)\n  }\n}\n\nexport { registerEvents }\nexport default ThingEvents\n"]}