{"version":3,"sources":["api/user/user.controller.js"],"names":["index","create","show","destroy","changePassword","upsert","me","authCallback","respondWithResult","res","statusCode","entity","status","json","validationError","err","handleError","send","req","User","find","exec","then","users","catch","newUser","body","provider","role","save","user","token","jwt","sign","_id","config","secrets","session","expiresIn","next","userId","params","id","findById","end","profile","findByIdAndRemove","oldPass","String","oldPassword","newPass","newPassword","authenticate","password","message","findOneAndUpdate","new","setDefaultsOnInsert","runValidators","findOne","redirect"],"mappings":"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","file":"user.controller.js","sourcesContent":["'use strict'\n\nimport User from './user.model'\nimport config from '../../config/environment'\nimport jwt from 'jsonwebtoken'\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200\n  return function(entity) {\n    if (entity) {\n      return res.status(statusCode).json(entity)\n    }\n    return null\n  }\n}\n\nfunction validationError(res, statusCode) {\n  statusCode = statusCode || 422\n  return function(err) {\n    return res.status(statusCode).json(err)\n  }\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500\n  return function(err) {\n    return res.status(statusCode).send(err)\n  }\n}\n\n/**\n * Get list of users\n * restriction: 'admin'\n */\nexport function index(req, res) {\n  return User.find({}, '-salt -password')\n    .exec()\n    .then((users) => {\n      res.status(200).json(users)\n    })\n    .catch(handleError(res))\n}\n\n/**\n * Creates a new user\n */\nexport function create(req, res) {\n  const newUser = new User(req.body)\n  newUser.provider = 'local'\n  newUser.role = 'user'\n  return newUser\n    .save()\n    .then(function(user) {\n      const token = jwt.sign({ _id: user._id }, config.secrets.session, {\n        expiresIn: 60 * 60 * 5\n      })\n      res.json({ token })\n    })\n    .catch(validationError(res))\n}\n\n/**\n * Get a single user\n */\nexport function show(req, res, next) {\n  const userId = req.params.id\n\n  return User.findById(userId)\n    .exec()\n    .then((user) => {\n      if (!user) {\n        return res.status(404).end()\n      }\n      res.json(user.profile)\n    })\n    .catch((err) => next(err))\n}\n\n/**\n * Deletes a user\n * restriction: 'admin'\n */\nexport function destroy(req, res) {\n  return User.findByIdAndRemove(req.params.id)\n    .exec()\n    .then(function() {\n      res.status(204).end()\n    })\n    .catch(handleError(res))\n}\n\n/**\n * Change a users password\n */\nexport function changePassword(req, res) {\n  const userId = req.user._id\n  const oldPass = String(req.body.oldPassword)\n  const newPass = String(req.body.newPassword)\n  User.findById(userId)\n    .exec()\n    .then((user) => {\n      if (user.authenticate(oldPass)) {\n        user.password = newPass\n        user\n          .save()\n          .then(() => {\n            res.status(200).json({ message: 'Password changed successfully!!' })\n          })\n          .catch(validationError(res))\n      } else {\n        res.status(403).json({ message: 'Old password is not correct!' })\n      }\n    })\n}\n\n// Upserts the given Thing in the DB at the specified ID\nexport function upsert(req, res) {\n  if (req.body._id) {\n    Reflect.deleteProperty(req.body, '_id')\n  }\n  return User.findOneAndUpdate({ _id: req.params.id }, req.body, {\n    new: true,\n    upsert: true,\n    setDefaultsOnInsert: true,\n    runValidators: true\n  })\n    .exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res))\n}\n\n/**\n * Get my info\n */\nexport function me(req, res, next) {\n  const userId = req.user._id\n\n  return User.findOne({ _id: userId }, '-salt -password')\n    .exec()\n    .then((user) => {\n      // don't ever give out the password or salt\n      if (!user) {\n        return res.status(401).end()\n      }\n      return res.json(user)\n    })\n    .catch((err) => next(err))\n}\n\n/**\n * Authentication callback\n */\nexport function authCallback(req, res) {\n  res.redirect('/')\n}\n"]}