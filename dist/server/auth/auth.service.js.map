{"version":3,"sources":["auth/auth.service.js"],"names":["isAuthenticated","hasRole","signToken","setTokenCookie","validateJwt","secret","config","secrets","session","use","req","res","next","query","hasOwnProperty","headers","authorization","access_token","cookies","token","User","findById","user","_id","exec","then","status","end","catch","err","roleRequired","Error","meetsRequirements","userRoles","indexOf","role","send","id","jwt","sign","expiresIn","cookie","redirect"],"mappings":"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","file":"auth.service.js","sourcesContent":["'use strict'\nimport config from '../config/environment'\nimport jwt from 'jsonwebtoken'\nimport expressJwt from 'express-jwt'\nimport compose from 'composable-middleware'\nimport User from '../api/user/user.model'\n\nconst validateJwt = expressJwt({\n  secret: config.secrets.session\n})\n\n/**\n * Attaches the user object to the request if authenticated\n * Otherwise returns 403\n */\nexport function isAuthenticated() {\n  return (\n    compose()\n      // Validate jwt\n      .use(function(req, res, next) {\n        // allow access_token to be passed through query parameter as well\n        if (req.query && req.query.hasOwnProperty('access_token')) {\n          req.headers.authorization = `Bearer ${req.query.access_token}`\n        }\n        // IE11 forgets to set Authorization header sometimes. Pull from cookie instead.\n        if (req.query && typeof req.headers.authorization === 'undefined') {\n          req.headers.authorization = `Bearer ${req.cookies.token}`\n        }\n        validateJwt(req, res, next)\n      })\n      // Attach user to request\n      .use(function(req, res, next) {\n        User.findById(req.user._id)\n          .exec()\n          .then((user) => {\n            if (!user) {\n              return res.status(401).end()\n            }\n            req.user = user\n            next()\n            return null\n          })\n          .catch((err) => next(err))\n      })\n  )\n}\n\n/**\n * Checks if the user role meets the minimum requirements of the route\n */\nexport function hasRole(roleRequired) {\n  if (!roleRequired) {\n    throw new Error('Required role needs to be set')\n  }\n  return compose()\n    .use(isAuthenticated())\n    .use(function meetsRequirements(req, res, next) {\n      if (config.userRoles.indexOf(req.user.role) >= config.userRoles.indexOf(roleRequired)) {\n        return next()\n      } else {\n        return res.status(403).send('Forbidden')\n      }\n    })\n}\n\n/**\n * Returns a jwt token signed by the app secret\n */\nexport function signToken(id, role) {\n  return jwt.sign({ _id: id, role }, config.secrets.session, {\n    expiresIn: 60 * 60 * 5\n  })\n}\n\n/**\n * Set token cookie directly for oAuth strategies\n */\nexport function setTokenCookie(req, res) {\n  if (!req.user) {\n    return res.status(404).send('It looks like you aren\\'t logged in, please try again.')\n  }\n  const token = signToken(req.user._id, req.user.role)\n  res.cookie('token', token)\n  res.redirect('/')\n}\n"]}