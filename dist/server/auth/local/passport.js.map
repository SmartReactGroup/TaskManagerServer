{"version":3,"sources":["auth/local/passport.js"],"names":["setup","localAuthenticate","User","email","password","done","findOne","toLowerCase","exec","then","user","message","authenticate","authError","authenticated","catch","err","passport","use","LocalStrategy","usernameField","passwordField"],"mappings":";;;;;QA4BgBA,K,GAAAA,K;;AA5BhB;;;;AACA;;;;AAEA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,IAAlD,EAAwD;AACtDH,OAAKI,OAAL,CAAa;AACXH,WAAOA,MAAMI,WAAN;AADI,GAAb,EAGGC,IAHH,GAIGC,IAJH,CAIQ,UAACC,IAAD,EAAU;AACd,QAAI,CAACA,IAAL,EAAW;AACT,aAAOL,KAAK,IAAL,EAAW,KAAX,EAAkB;AACvBM,iBAAS;AADc,OAAlB,CAAP;AAGD;AACDD,SAAKE,YAAL,CAAkBR,QAAlB,EAA4B,UAASS,SAAT,EAAoBC,aAApB,EAAmC;AAC7D,UAAID,SAAJ,EAAe;AACb,eAAOR,KAAKQ,SAAL,CAAP;AACD;AACD,UAAI,CAACC,aAAL,EAAoB;AAClB,eAAOT,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAEM,SAAS,+BAAX,EAAlB,CAAP;AACD,OAFD,MAEO;AACL,eAAON,KAAK,IAAL,EAAWK,IAAX,CAAP;AACD;AACF,KATD;AAUD,GApBH,EAqBGK,KArBH,CAqBS,UAACC,GAAD;AAAA,WAASX,KAAKW,GAAL,CAAT;AAAA,GArBT;AAsBD;;AAEM,SAAShB,KAAT,CAAeE,IAAf,CAAoB,YAApB,EAAkC;AACvCe,qBAASC,GAAT,CACE,IAAIC,uBAAJ,CACE;AACEC,mBAAe,OADjB;AAEEC,mBAAe,UAFjB,CAE4B;AAF5B,GADF,EAKE,UAASlB,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AAC9B,WAAOJ,kBAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,IAAzC,CAAP;AACD,GAPH,CADF;AAWD","file":"passport.js","sourcesContent":["import passport from 'passport'\nimport { Strategy as LocalStrategy } from 'passport-local'\n\nfunction localAuthenticate(User, email, password, done) {\n  User.findOne({\n    email: email.toLowerCase()\n  })\n    .exec()\n    .then((user) => {\n      if (!user) {\n        return done(null, false, {\n          message: 'This email is not registered.'\n        })\n      }\n      user.authenticate(password, function(authError, authenticated) {\n        if (authError) {\n          return done(authError)\n        }\n        if (!authenticated) {\n          return done(null, false, { message: 'This password is not correct.' })\n        } else {\n          return done(null, user)\n        }\n      })\n    })\n    .catch((err) => done(err))\n}\n\nexport function setup(User /*, config*/) {\n  passport.use(\n    new LocalStrategy(\n      {\n        usernameField: 'email',\n        passwordField: 'password' // this is the virtual field on the model\n      },\n      function(email, password, done) {\n        return localAuthenticate(User, email, password, done)\n      }\n    )\n  )\n}\n"]}