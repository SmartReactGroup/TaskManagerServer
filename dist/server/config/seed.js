"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _promise=require("babel-runtime/core-js/promise"),_promise2=_interopRequireDefault(_promise);exports.default=seedDatabaseIfNeeded;var _thing=require("../api/thing/thing.model"),_thing2=_interopRequireDefault(_thing),_user=require("../api/user/user.model"),_user2=_interopRequireDefault(_user),_environment=require("./environment/"),_environment2=_interopRequireDefault(_environment);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function seedDatabaseIfNeeded(){if(!_environment2.default.seedDB)return _promise2.default.resolve();var e=[],r=_thing2.default.find({}).remove().then(function(){return _thing2.default.create({name:"Development Tools",info:"Integration with popular tools such as Webpack, Babel, TypeScript, Karma, Mocha, ESLint, Protractor, Pug, Stylus, Sass, and Less."},{name:"Server and Client integration",info:"Built with a powerful and fun stack: MongoDB, Express, Angular, and Node."},{name:"Smart Build System",info:"Build system ignores `spec` files, allowing you to keep tests alongside code. Automatic injection of scripts and styles into your app.html"},{name:"Modular Structure",info:"Best practice client and server structures allow for more code reusability and maximum scalability"},{name:"Optimized Build",info:"Build process packs up your templates as a single JavaScript payload, minifies your scripts/css/images, and rewrites asset names for caching."},{name:"Deployment Ready",info:"Easily deploy your app to Heroku or Openshift with the heroku and openshift subgenerators"})}).then(function(){return console.log("finished populating things")}).catch(function(e){return console.log("error populating things",e)});e.push(r);var t=_user2.default.find({}).remove().then(function(){return _user2.default.create({provider:"local",name:"Test User",email:"test@example.com",password:"test"},{provider:"local",role:"admin",name:"Admin",email:"admin@example.com",password:"admin"}).then(function(){return console.log("finished populating users")}).catch(function(e){return console.log("error populating users",e)})});return e.push(t),_promise2.default.all(e)}